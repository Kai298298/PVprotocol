# Generated by Django 5.2.4 on 2025-07-11 10:04

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('installations', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TaskImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='task_images/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Protocol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Titel')),
                ('content', models.JSONField(verbose_name='Protokollinhalt')),
                ('status', models.CharField(choices=[('draft', 'Entwurf'), ('completed', 'Abgeschlossen'), ('signed', 'Unterschrieben'), ('archived', 'Archiviert')], default='draft', max_length=20, verbose_name='Status')),
                ('signed_at', models.DateTimeField(blank=True, null=True, verbose_name='Unterschrieben am')),
                ('signature_data', models.TextField(blank=True, verbose_name='Unterschriftendaten')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Erstellt am')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Aktualisiert am')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='protocols', to='accounts.company', verbose_name='Firma/Mandant')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_protocols', to=settings.AUTH_USER_MODEL, verbose_name='Erstellt von')),
                ('installation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='protocols', to='installations.pvinstallation', verbose_name='Anlage')),
                ('signed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='signed_protocols', to=settings.AUTH_USER_MODEL, verbose_name='Unterschrieben von')),
            ],
            options={
                'verbose_name': 'Protokoll',
                'verbose_name_plural': 'Protokolle',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProtocolFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='protocol_files/', verbose_name='Datei')),
                ('filename', models.CharField(max_length=255, verbose_name='Dateiname')),
                ('file_type', models.CharField(blank=True, max_length=50, verbose_name='Dateityp')),
                ('file_size', models.PositiveIntegerField(verbose_name='Dateigröße (Bytes)')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='Hochgeladen am')),
                ('protocol', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='protocols.protocol', verbose_name='Protokoll')),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Hochgeladen von')),
            ],
            options={
                'verbose_name': 'Protokolldatei',
                'verbose_name_plural': 'Protokolldateien',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='ProtocolTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Vorlagenname')),
                ('template_type', models.CharField(choices=[('installation', 'Installation'), ('maintenance', 'Wartung'), ('repair', 'Reparatur'), ('inspection', 'Inspektion'), ('commissioning', 'Inbetriebnahme')], max_length=20, verbose_name='Vorlagentyp')),
                ('description', models.TextField(blank=True, verbose_name='Beschreibung')),
                ('content', models.JSONField(verbose_name='Vorlageninhalt')),
                ('is_active', models.BooleanField(verbose_name='Aktiv')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Erstellt am')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Aktualisiert am')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='template_logos/', verbose_name='Logo')),
                ('branding', models.JSONField(default=dict, help_text='Branding-Informationen wie Farbschema als JSON, z.B. {"primary_color": "#123456", "secondary_color": "#abcdef"}', verbose_name='Branding (Farben)')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Erstellt von')),
            ],
            options={
                'verbose_name': 'Protokollvorlage',
                'verbose_name_plural': 'Protokollvorlagen',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='protocol',
            name='template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='protocols.protocoltemplate', verbose_name='Vorlage'),
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Titel')),
                ('description', models.TextField(verbose_name='Beschreibung')),
                ('status', models.CharField(choices=[('todo', 'Zu erledigen'), ('in_progress', 'In Bearbeitung'), ('review', 'Zur Überprüfung'), ('completed', 'Abgeschlossen'), ('cancelled', 'Abgebrochen'), ('on_hold', 'Pausiert')], default='todo', max_length=20, verbose_name='Status')),
                ('priority', models.CharField(choices=[('low', 'Niedrig'), ('medium', 'Mittel'), ('high', 'Hoch'), ('urgent', 'Dringend')], default='medium', max_length=20, verbose_name='Priorität')),
                ('due_date', models.DateTimeField(blank=True, null=True, verbose_name='Fälligkeitsdatum')),
                ('estimated_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Geschätzte Stunden')),
                ('actual_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Tatsächliche Stunden')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Erstellt am')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Aktualisiert am')),
                ('started_at', models.DateTimeField(blank=True, null=True, verbose_name='Gestartet am')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Abgeschlossen am')),
                ('tags', models.CharField(blank=True, help_text='Komma-getrennte Tags für Kategorisierung', max_length=500, verbose_name='Tags')),
                ('assigned_users', models.ManyToManyField(blank=True, related_name='assigned_tasks', to=settings.AUTH_USER_MODEL, verbose_name='Zugewiesene Mitarbeiter')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='accounts.company', verbose_name='Firma/Mandant')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_tasks', to=settings.AUTH_USER_MODEL, verbose_name='Erstellt von')),
                ('installation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='installations.pvinstallation', verbose_name='Anlage')),
                ('images', models.ManyToManyField(blank=True, related_name='tasks', to='protocols.taskimage', verbose_name='Bilder')),
            ],
            options={
                'verbose_name': 'Aufgabe',
                'verbose_name_plural': 'Aufgaben',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='protocol',
            name='task',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='protocols', to='protocols.task', verbose_name='Aufgabe'),
        ),
        migrations.CreateModel(
            name='TaskNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='Notizinhalt')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Erstellt am')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Aktualisiert am')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Autor')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='protocols.task', verbose_name='Aufgabe')),
            ],
            options={
                'verbose_name': 'Aufgabennotiz',
                'verbose_name_plural': 'Aufgabennotizen',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['status', 'priority'], name='protocols_t_status_fe6be3_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['due_date'], name='protocols_t_due_dat_f10019_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['company'], name='protocols_t_company_b48255_idx'),
        ),
    ]
