# Generated by Django 5.2.4 on 2025-07-11 10:04

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Firmenname')),
                ('address', models.TextField(blank=True, verbose_name='Firmenadresse')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Firma',
                'verbose_name_plural': 'Firmen',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('address', models.TextField(blank=True, verbose_name='Adresse')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='E-Mail')),
                ('phone', models.CharField(blank=True, max_length=50, verbose_name='Telefon')),
                ('company_name', models.CharField(blank=True, max_length=255, verbose_name='Unternehmen')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Kunde',
                'verbose_name_plural': 'Kunden',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('admin', 'Administrator'), ('employee', 'Mitarbeiter'), ('guest', 'Gast')], default='employee', max_length=20, verbose_name='Rolle')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Telefonnummer')),
                ('address', models.TextField(blank=True, verbose_name='Adresse')),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='profile_images/', verbose_name='Profilbild')),
                ('plan', models.CharField(choices=[('basic', 'Basic (1 Anlage, 1 User)'), ('premium', 'Premium (bis 10 Anlagen, Multi-User, 20€/User)'), ('enterprise', 'Enterprise (unbegrenzt, Multi-User, Preis auf Anfrage)')], default='basic', max_length=20, verbose_name='SaaS-Plan')),
                ('company_logo', models.ImageField(blank=True, null=True, upload_to='company_logos/', verbose_name='Firmenlogo')),
                ('notify_on_new_employee', models.BooleanField(default=False, verbose_name='E-Mail bei neuen Mitarbeitern')),
                ('notify_on_role_change', models.BooleanField(default=False, verbose_name='E-Mail bei Rollenänderung')),
                ('notify_on_new_task', models.BooleanField(default=False, verbose_name='E-Mail bei neuen/zugewiesenen Aufgaben')),
                ('notify_on_new_installation', models.BooleanField(default=False, verbose_name='E-Mail bei neu angelegten Anlagen')),
                ('notify_on_maintenance_done', models.BooleanField(default=False, verbose_name='E-Mail bei abgeschlossener Wartung')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='users', to='accounts.company', verbose_name='Firma/Mandant')),
            ],
            options={
                'verbose_name': 'Benutzer',
                'verbose_name_plural': 'Benutzer',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Invitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, verbose_name='E-Mail-Adresse')),
                ('role', models.CharField(choices=[('admin', 'Administrator'), ('employee', 'Mitarbeiter'), ('guest', 'Gast')], default='employee', max_length=20, verbose_name='Rolle')),
                ('token', models.UUIDField(default=uuid.uuid4, unique=True, verbose_name='Einladungstoken')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Erstellt am')),
                ('expires_at', models.DateTimeField(verbose_name='Gültig bis')),
                ('is_used', models.BooleanField(default=False, verbose_name='Bereits verwendet')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.company', verbose_name='Unternehmen')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Erstellt von')),
            ],
            options={
                'verbose_name': 'Einladung',
                'verbose_name_plural': 'Einladungen',
                'ordering': ['-created_at'],
            },
        ),
    ]
